//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SAF.AgenteServicios.ProxyServicioGestionSoaAuditor {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProxyServicioGestionSoaAuditor.IGestionSociedadAuditorLogic")]
    public interface IGestionSociedadAuditorLogic {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionSociedadAuditorLogic/ListarTodoTipoSolicitud", ReplyAction="http://tempuri.org/IGestionSociedadAuditorLogic/ListarTodoTipoSolicitudResponse")]
        SAF.DTO.TipoSolicitudDTO[] ListarTodoTipoSolicitud();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionSociedadAuditorLogic/ListarTodoTipoSolicitud", ReplyAction="http://tempuri.org/IGestionSociedadAuditorLogic/ListarTodoTipoSolicitudResponse")]
        System.Threading.Tasks.Task<SAF.DTO.TipoSolicitudDTO[]> ListarTodoTipoSolicitudAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionSociedadAuditorLogic/GrabarSolicitud", ReplyAction="http://tempuri.org/IGestionSociedadAuditorLogic/GrabarSolicitudResponse")]
        SAF.DTO.SolicitudInsActDTO GrabarSolicitud(SAF.DTO.SolicitudInsActDTO entidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionSociedadAuditorLogic/GrabarSolicitud", ReplyAction="http://tempuri.org/IGestionSociedadAuditorLogic/GrabarSolicitudResponse")]
        System.Threading.Tasks.Task<SAF.DTO.SolicitudInsActDTO> GrabarSolicitudAsync(SAF.DTO.SolicitudInsActDTO entidad);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGestionSociedadAuditorLogicChannel : SAF.AgenteServicios.ProxyServicioGestionSoaAuditor.IGestionSociedadAuditorLogic, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GestionSociedadAuditorLogicClient : System.ServiceModel.ClientBase<SAF.AgenteServicios.ProxyServicioGestionSoaAuditor.IGestionSociedadAuditorLogic>, SAF.AgenteServicios.ProxyServicioGestionSoaAuditor.IGestionSociedadAuditorLogic {
        
        public GestionSociedadAuditorLogicClient() {
        }
        
        public GestionSociedadAuditorLogicClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GestionSociedadAuditorLogicClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GestionSociedadAuditorLogicClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GestionSociedadAuditorLogicClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SAF.DTO.TipoSolicitudDTO[] ListarTodoTipoSolicitud() {
            return base.Channel.ListarTodoTipoSolicitud();
        }
        
        public System.Threading.Tasks.Task<SAF.DTO.TipoSolicitudDTO[]> ListarTodoTipoSolicitudAsync() {
            return base.Channel.ListarTodoTipoSolicitudAsync();
        }
        
        public SAF.DTO.SolicitudInsActDTO GrabarSolicitud(SAF.DTO.SolicitudInsActDTO entidad) {
            return base.Channel.GrabarSolicitud(entidad);
        }
        
        public System.Threading.Tasks.Task<SAF.DTO.SolicitudInsActDTO> GrabarSolicitudAsync(SAF.DTO.SolicitudInsActDTO entidad) {
            return base.Channel.GrabarSolicitudAsync(entidad);
        }
    }
}
