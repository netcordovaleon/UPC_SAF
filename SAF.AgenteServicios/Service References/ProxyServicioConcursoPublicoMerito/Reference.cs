//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SAF.AgenteServicios.ProxyServicioConcursoPublicoMerito {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SP_SAF_CORTEPUBLICACION_Result", Namespace="http://schemas.datacontract.org/2004/07/SAF.Entidad")]
    [System.SerializableAttribute()]
    public partial class SP_SAF_CORTEPUBLICACION_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EXITOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MENSAJEField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EXITO {
            get {
                return this.EXITOField;
            }
            set {
                if ((this.EXITOField.Equals(value) != true)) {
                    this.EXITOField = value;
                    this.RaisePropertyChanged("EXITO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MENSAJE {
            get {
                return this.MENSAJEField;
            }
            set {
                if ((object.ReferenceEquals(this.MENSAJEField, value) != true)) {
                    this.MENSAJEField = value;
                    this.RaisePropertyChanged("MENSAJE");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ProxyServicioConcursoPublicoMerito.IConcursoPublicoMeritoLogic")]
    public interface IConcursoPublicoMeritoLogic {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConcursoPublicoMeritoLogic/GrabarCronograma", ReplyAction="http://tempuri.org/IConcursoPublicoMeritoLogic/GrabarCronogramaResponse")]
        SAF.DTO.CronogramaDTO GrabarCronograma(SAF.DTO.CronogramaDTO entidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConcursoPublicoMeritoLogic/GrabarCronograma", ReplyAction="http://tempuri.org/IConcursoPublicoMeritoLogic/GrabarCronogramaResponse")]
        System.Threading.Tasks.Task<SAF.DTO.CronogramaDTO> GrabarCronogramaAsync(SAF.DTO.CronogramaDTO entidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConcursoPublicoMeritoLogic/GrabarCronoEntidad", ReplyAction="http://tempuri.org/IConcursoPublicoMeritoLogic/GrabarCronoEntidadResponse")]
        SAF.DTO.CronoEntidadDTO GrabarCronoEntidad(SAF.DTO.CronoEntidadDTO entidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConcursoPublicoMeritoLogic/GrabarCronoEntidad", ReplyAction="http://tempuri.org/IConcursoPublicoMeritoLogic/GrabarCronoEntidadResponse")]
        System.Threading.Tasks.Task<SAF.DTO.CronoEntidadDTO> GrabarCronoEntidadAsync(SAF.DTO.CronoEntidadDTO entidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConcursoPublicoMeritoLogic/ListarPublicacion", ReplyAction="http://tempuri.org/IConcursoPublicoMeritoLogic/ListarPublicacionResponse")]
        SAF.DTO.PublicacionViewDTO[] ListarPublicacion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConcursoPublicoMeritoLogic/ListarPublicacion", ReplyAction="http://tempuri.org/IConcursoPublicoMeritoLogic/ListarPublicacionResponse")]
        System.Threading.Tasks.Task<SAF.DTO.PublicacionViewDTO[]> ListarPublicacionAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConcursoPublicoMeritoLogic/PublicarPublicacion", ReplyAction="http://tempuri.org/IConcursoPublicoMeritoLogic/PublicarPublicacionResponse")]
        SAF.DTO.PublicacionDTO PublicarPublicacion(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConcursoPublicoMeritoLogic/PublicarPublicacion", ReplyAction="http://tempuri.org/IConcursoPublicoMeritoLogic/PublicarPublicacionResponse")]
        System.Threading.Tasks.Task<SAF.DTO.PublicacionDTO> PublicarPublicacionAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConcursoPublicoMeritoLogic/GenerarCortePublicacion", ReplyAction="http://tempuri.org/IConcursoPublicoMeritoLogic/GenerarCortePublicacionResponse")]
        SAF.AgenteServicios.ProxyServicioConcursoPublicoMerito.SP_SAF_CORTEPUBLICACION_Result GenerarCortePublicacion(int idPublicacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConcursoPublicoMeritoLogic/GenerarCortePublicacion", ReplyAction="http://tempuri.org/IConcursoPublicoMeritoLogic/GenerarCortePublicacionResponse")]
        System.Threading.Tasks.Task<SAF.AgenteServicios.ProxyServicioConcursoPublicoMerito.SP_SAF_CORTEPUBLICACION_Result> GenerarCortePublicacionAsync(int idPublicacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConcursoPublicoMeritoLogic/VerResultadoCorte", ReplyAction="http://tempuri.org/IConcursoPublicoMeritoLogic/VerResultadoCorteResponse")]
        SAF.DTO.ResultadoCorteSpDTO[] VerResultadoCorte(int idPublicacion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IConcursoPublicoMeritoLogic/VerResultadoCorte", ReplyAction="http://tempuri.org/IConcursoPublicoMeritoLogic/VerResultadoCorteResponse")]
        System.Threading.Tasks.Task<SAF.DTO.ResultadoCorteSpDTO[]> VerResultadoCorteAsync(int idPublicacion);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IConcursoPublicoMeritoLogicChannel : SAF.AgenteServicios.ProxyServicioConcursoPublicoMerito.IConcursoPublicoMeritoLogic, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConcursoPublicoMeritoLogicClient : System.ServiceModel.ClientBase<SAF.AgenteServicios.ProxyServicioConcursoPublicoMerito.IConcursoPublicoMeritoLogic>, SAF.AgenteServicios.ProxyServicioConcursoPublicoMerito.IConcursoPublicoMeritoLogic {
        
        public ConcursoPublicoMeritoLogicClient() {
        }
        
        public ConcursoPublicoMeritoLogicClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ConcursoPublicoMeritoLogicClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConcursoPublicoMeritoLogicClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ConcursoPublicoMeritoLogicClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SAF.DTO.CronogramaDTO GrabarCronograma(SAF.DTO.CronogramaDTO entidad) {
            return base.Channel.GrabarCronograma(entidad);
        }
        
        public System.Threading.Tasks.Task<SAF.DTO.CronogramaDTO> GrabarCronogramaAsync(SAF.DTO.CronogramaDTO entidad) {
            return base.Channel.GrabarCronogramaAsync(entidad);
        }
        
        public SAF.DTO.CronoEntidadDTO GrabarCronoEntidad(SAF.DTO.CronoEntidadDTO entidad) {
            return base.Channel.GrabarCronoEntidad(entidad);
        }
        
        public System.Threading.Tasks.Task<SAF.DTO.CronoEntidadDTO> GrabarCronoEntidadAsync(SAF.DTO.CronoEntidadDTO entidad) {
            return base.Channel.GrabarCronoEntidadAsync(entidad);
        }
        
        public SAF.DTO.PublicacionViewDTO[] ListarPublicacion() {
            return base.Channel.ListarPublicacion();
        }
        
        public System.Threading.Tasks.Task<SAF.DTO.PublicacionViewDTO[]> ListarPublicacionAsync() {
            return base.Channel.ListarPublicacionAsync();
        }
        
        public SAF.DTO.PublicacionDTO PublicarPublicacion(int id) {
            return base.Channel.PublicarPublicacion(id);
        }
        
        public System.Threading.Tasks.Task<SAF.DTO.PublicacionDTO> PublicarPublicacionAsync(int id) {
            return base.Channel.PublicarPublicacionAsync(id);
        }
        
        public SAF.AgenteServicios.ProxyServicioConcursoPublicoMerito.SP_SAF_CORTEPUBLICACION_Result GenerarCortePublicacion(int idPublicacion) {
            return base.Channel.GenerarCortePublicacion(idPublicacion);
        }
        
        public System.Threading.Tasks.Task<SAF.AgenteServicios.ProxyServicioConcursoPublicoMerito.SP_SAF_CORTEPUBLICACION_Result> GenerarCortePublicacionAsync(int idPublicacion) {
            return base.Channel.GenerarCortePublicacionAsync(idPublicacion);
        }
        
        public SAF.DTO.ResultadoCorteSpDTO[] VerResultadoCorte(int idPublicacion) {
            return base.Channel.VerResultadoCorte(idPublicacion);
        }
        
        public System.Threading.Tasks.Task<SAF.DTO.ResultadoCorteSpDTO[]> VerResultadoCorteAsync(int idPublicacion) {
            return base.Channel.VerResultadoCorteAsync(idPublicacion);
        }
    }
}
